{"ast":null,"code":"var _jsxFileName = \"/root/react-app/rickandmorty/src/Character.js\";\nimport React from \"react\";\nimport CharacterTile from \"./CharacterTile\";\nimport Search from \"./Search\";\n\nclass Character extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      IsLoading: true,\n      data: []\n    };\n    this.HandleChange = this.HandleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://rickandmortyapi.com/api/character/\").then(res => res.json()).then(Data => {\n      this.setState(() => {\n        return {\n          IsLoading: false,\n          data: Data.results,\n          SearchValue: \"\"\n        };\n      });\n    });\n  }\n\n  HandleChange(e) {\n    console.log(e.target.value);\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n    this.setState(() => {\n      return {\n        IsLoading: true\n      };\n    });\n    fetch(\"https://rickandmortyapi.com/api/character/?name=\" + e.target.value).then(res => res.json()).then(Data => {\n      console.log(Data);\n      this.setState(() => {\n        return {\n          IsLoading: false,\n          data: Data.results\n        };\n      });\n      console.log(this.state.data);\n    });\n  }\n\n  render() {\n    let load;\n\n    if (!this.state.IsLoading) {\n      const Arr = this.state.data.map(element => {\n        return React.createElement(CharacterTile, {\n          key: element.id,\n          image: element.image,\n          name: element.name,\n          gender: element.gender,\n          species: element.species,\n          status: element.status,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        });\n      });\n      load = Arr;\n    } else load = \"hello\";\n\n    console.log(this.state.data);\n    console.log(this.state.SearchValue);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Search, {\n      placeholder: \"Enter any Character Name\",\n      value: this.state.SearchValue,\n      func: this.HandleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"CharacterTile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, load));\n  }\n\n}\n\nexport default Character;","map":{"version":3,"sources":["/root/react-app/rickandmorty/src/Character.js"],"names":["React","CharacterTile","Search","Character","Component","constructor","state","IsLoading","data","HandleChange","bind","componentDidMount","fetch","then","res","json","Data","setState","results","SearchValue","e","console","log","target","value","name","render","load","Arr","map","element","id","image","gender","species","status"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAGA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,IADF;AAETC,MAAAA,IAAI,EAAE;AAFG,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKF,IAFL,CAGSG,IAAD,IAAU;AACN,WAAKC,QAAL,CAAc,MAAM;AAChB,eACI;AACIV,UAAAA,SAAS,EAAE,KADf;AAEIC,UAAAA,IAAI,EAAEQ,IAAI,CAACE,OAFf;AAGIC,UAAAA,WAAW,EAAE;AAHjB,SADJ;AAOH,OARD;AASH,KAbT;AAcH;;AAEDV,EAAAA,YAAY,CAACW,CAAD,EAAG;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAArB;AACA,SAAKP,QAAL,CAAc;AAAE,OAACG,CAAC,CAACG,MAAF,CAASE,IAAV,GAAgBL,CAAC,CAACG,MAAF,CAASC;AAA3B,KAAd;AAEA,SAAKP,QAAL,CAAc,MAAI;AACd,aACJ;AAACV,QAAAA,SAAS,EAAC;AAAX,OADI;AAED,KAHH;AAKAK,IAAAA,KAAK,CAAC,qDAAmDQ,CAAC,CAACG,MAAF,CAASC,KAA7D,CAAL,CACCX,IADD,CACOC,GAAD,IAAOA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEOG,IAAD,IAAQ;AACVK,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,WAAKC,QAAL,CAAc,MACd;AACI,eACI;AACIV,UAAAA,SAAS,EAAC,KADd;AAEIC,UAAAA,IAAI,EAACQ,IAAI,CAACE;AAFd,SADJ;AAMH,OARD;AAUJG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWE,IAAvB;AAEH,KAhBG;AAiBH;;AACDkB,EAAAA,MAAM,GAAG;AACL,QAAIC,IAAJ;;AACA,QAAI,CAAC,KAAKrB,KAAL,CAAWC,SAAhB,EAA2B;AACvB,YAAMqB,GAAG,GAAG,KAAKtB,KAAL,CAAWE,IAAX,CAAgBqB,GAAhB,CAAqBC,OAAD,IAAa;AACzC,eAEI,oBAAC,aAAD;AACI,UAAA,GAAG,EAAEA,OAAO,CAACC,EADjB;AAEI,UAAA,KAAK,EAAED,OAAO,CAACE,KAFnB;AAGI,UAAA,IAAI,EAAEF,OAAO,CAACL,IAHlB;AAII,UAAA,MAAM,EAAEK,OAAO,CAACG,MAJpB;AAKI,UAAA,OAAO,EAAEH,OAAO,CAACI,OALrB;AAMI,UAAA,MAAM,EAAEJ,OAAO,CAACK,MANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAWH,OAZW,CAAZ;AAaAR,MAAAA,IAAI,GAAGC,GAAP;AACH,KAfD,MAiBID,IAAI,GAAG,OAAP;;AACJN,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWE,IAAvB;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWa,WAAvB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAC,0BAApB;AAA+C,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWa,WAAjE;AAA8E,MAAA,IAAI,EAAE,KAAKV,YAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKkB,IADL,CAFJ,CADJ;AAQH;;AAnFmC;;AAsFxC,eAAexB,SAAf","sourcesContent":["import React from \"react\"\nimport CharacterTile from \"./CharacterTile\"\nimport Search from \"./Search\";\n\n\nclass Character extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            IsLoading: true,\n            data: []\n        }\n        this.HandleChange = this.HandleChange.bind(this)\n    }\n    componentDidMount() {\n        fetch(\"https://rickandmortyapi.com/api/character/\")\n            .then((res) => res.json())\n            .then(\n                (Data) => {\n                    this.setState(() => {\n                        return (\n                            {\n                                IsLoading: false,\n                                data: Data.results,\n                                SearchValue: \"\"\n                            }\n                        )\n                    })\n                })\n    }\n\n    HandleChange(e){\n        console.log(e.target.value)\n        this.setState({ [e.target.name]:e.target.value})\n\n        this.setState(()=>{\n            return(\n        {IsLoading:true,\n        })})\n\n        fetch(\"https://rickandmortyapi.com/api/character/?name=\"+e.target.value)\n        .then((res)=>res.json())\n        .then((Data)=>{\n            console.log(Data)\n            this.setState(()=>\n            {\n                return(\n                    {\n                        IsLoading:false,\n                        data:Data.results\n                    }\n                )\n            }\n        )\n        console.log(this.state.data)\n        \n    })\n    }\n    render() {\n        let load\n        if (!this.state.IsLoading) {\n            const Arr = this.state.data.map((element) => {\n                return (\n\n                    <CharacterTile\n                        key={element.id}\n                        image={element.image}\n                        name={element.name}\n                        gender={element.gender}\n                        species={element.species}\n                        status={element.status}\n                    />\n                )\n            })\n            load = Arr\n        }\n        else\n            load = \"hello\"\n        console.log(this.state.data)\n        console.log(this.state.SearchValue)\n        return (\n            <div>\n                <Search placeholder=\"Enter any Character Name\" value={this.state.SearchValue} func={this.HandleChange}/>\n                <div className=\"CharacterTile\">\n                    {load}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Character"]},"metadata":{},"sourceType":"module"}