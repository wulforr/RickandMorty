{"ast":null,"code":"var _jsxFileName = \"/root/react-app/rickandmorty/src/Episode.js\";\nimport React from \"react\";\nimport Search from \"./Search\";\nimport EpisodeTile from \"./EpisodeTile\";\n\nclass Episode extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      IsLoading: false,\n      data: [],\n      SearchValue: \"\"\n    };\n    this.HandleChange = this.HandleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://rickandmortyapi.com/api/episode/\").then(res => res.json()).then(Data => {\n      this.setState(() => {\n        return {\n          IsLoading: false,\n          data: Data.results,\n          SearchValue: \"\"\n        };\n      });\n    });\n  }\n\n  HandleChange(e) {\n    console.log(e.target.value);\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n    this.setState(() => {\n      return {\n        IsLoading: true\n      };\n    });\n    fetch(\"https://rickandmortyapi.com/api/episode/?episode=\" + e.target.value).then(res => res.json()).then(Data => {\n      console.log(Data);\n      this.setState(() => {\n        return {\n          IsLoading: false,\n          data: Data.results.slice(0, 20)\n        };\n      });\n      console.log(this.state.data);\n    });\n  }\n\n  render() {\n    let load;\n\n    if (!this.state.IsLoading && this.state.data != null) {\n      const Arr = this.state.data.map(element => {\n        const chara = element.characters.map(el => {\n          return fetch(el).then(res => res.json()).then(Data => {\n            return Data.name;\n          });\n        });\n        return React.createElement(EpisodeTile, {\n          key: element.id,\n          name: element.name,\n          Air_Date: element.air_date,\n          episode: element.episode,\n          characters: chara,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        });\n      });\n      load = Arr;\n    } else load = \"hello\";\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Search, {\n      placeholder: \"Enter any Episode Number\",\n      value: this.state.SearchValue,\n      func: this.HandleChange,\n      name: \"SearchValue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"LocationTile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, load));\n  }\n\n}\n\nexport default Episode;","map":{"version":3,"sources":["/root/react-app/rickandmorty/src/Episode.js"],"names":["React","Search","EpisodeTile","Episode","Component","constructor","state","IsLoading","data","SearchValue","HandleChange","bind","componentDidMount","fetch","then","res","json","Data","setState","results","e","console","log","target","value","name","slice","render","load","Arr","map","element","chara","characters","el","id","air_date","episode"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport Search from \"./Search\"\nimport EpisodeTile from \"./EpisodeTile\"\n\nclass Episode extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            IsLoading: false,\n            data: [],\n            SearchValue: \"\"\n        }\n        this.HandleChange = this.HandleChange.bind(this)\n    }\n    componentDidMount() {\n        fetch(\"https://rickandmortyapi.com/api/episode/\")\n            .then((res) => res.json())\n            .then(\n                (Data) => {\n                    this.setState(() => {\n                        return (\n                            {\n                                IsLoading: false,\n                                data: Data.results,\n                                SearchValue: \"\"\n                            }\n                        )\n                    })\n                })\n    }\n\n    HandleChange(e) {\n        console.log(e.target.value)\n        this.setState({ [e.target.name]: e.target.value })\n\n        this.setState(() => {\n            return (\n                {\n                    IsLoading: true,\n                })\n        })\n\n        fetch(\"https://rickandmortyapi.com/api/episode/?episode=\" + e.target.value)\n            .then((res) => res.json())\n            .then((Data) => {\n                console.log(Data)\n                this.setState(() => {\n                    return (\n                        {\n                            IsLoading: false,\n                            data: Data.results.slice(0, 20)\n                        }\n                    )\n                }\n                )\n                console.log(this.state.data)\n\n            })\n    }\n\n    render() {\n        let load\n\n        if (!this.state.IsLoading && this.state.data != null) {\n            const Arr = this.state.data.map((element) => {\n               const chara = element.characters.map((el) => {\n                        return(fetch(el)\n                        .then((res) => res.json())\n                        .then((Data) => {\n                            return (Data.name)\n                        }\n                        )\n                        )\n                })\n                return (\n\n                    <EpisodeTile\n                        key={element.id}\n                        name={element.name}\n                        Air_Date={element.air_date}\n                        episode={element.episode}\n                        characters={chara}\n                    />\n                )\n            })\n            load = Arr\n        }\n        else\n            load = \"hello\"\n        return (\n            <div>\n                <Search placeholder=\"Enter any Episode Number\" value={this.state.SearchValue} func={this.HandleChange} name=\"SearchValue\" />\n                <div className=\"LocationTile\">\n                    {load}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Episode"]},"metadata":{},"sourceType":"module"}